start:  in "Number 1? "                     => r_a1
        in "Number 2? "                     => r_a2
        loadI #end                          => r_return_address
        loadI 0                             => r_count
        push r_return_address
if:     cmp_EQ r_a1, r_a2                   => r_cmp
        cbr r_cmp                           -> then1, elif
then1:  i2i r_a1                            => r_ans
        jumpI -> endif
elif:   cmp_GT r_a1, r_a2                   => r_cmp
        cbr r_cmp                           -> then2, else
then2:  sub r_a1, r_a2                      => r_a1
        loadI #endif                        => r_return_address
        push r_return_address
        jumpI -> if
else:   i2i r_a1                            => r_a3
        sub r_a2, r_a1                      => r_a1
        i2i r_a3                            => r_a2
        loadI #endif                        => r_return_address
        push r_return_address
        jumpI -> if
endif:  addI r_count, 1                     => r_count
        pop => r_return_address
        jump -> r_return_address
end:    out "Greatest Common Divisor: ", r_ans
        out "Call count: " ,r_count